{
	"name": "DF_TRAN_UpdateCustomerDimension",
	"properties": {
		"folder": {
			"name": "Modulo 04"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ASQL_Tailspin_CustomerSource",
						"type": "DatasetReference"
					},
					"name": "SourceDB"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_Tailspin_DimCustomer",
						"type": "DatasetReference"
					},
					"name": "DimCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_ASQL_Tailspin_DimCustomer",
						"type": "DatasetReference"
					},
					"name": "SinkDimCustomer"
				}
			],
			"transformations": [
				{
					"name": "CreateCustomHash"
				},
				{
					"name": "ExistsHash"
				},
				{
					"name": "LookupCustomerID"
				},
				{
					"name": "SetDates"
				},
				{
					"name": "AllowUpsert"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceDB",
				"source(output(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          InsertedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          HashKey as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimCustomer",
				"SourceDB derive(HashKey = sha2(256, iifNull(Title,'') +FirstName \r",
				"+iifNull(MiddleName,'') +LastName \r",
				"+iifNull(Suffix,'') +iifNull(CompanyName,'') \r",
				"+iifNull(SalesPerson,'') \r",
				"+iifNull(EmailAddress,'') +iifNull(Phone,''))) ~> CreateCustomHash",
				"CreateCustomHash, DimCustomer exists(CreateCustomHash@HashKey == DimCustomer@HashKey,",
				"     negate:true,",
				"     broadcast: 'auto')~> ExistsHash",
				"ExistsHash, DimCustomer lookup(SourceDB@CustomerID == DimCustomer@CustomerID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupCustomerID",
				"LookupCustomerID derive(InsertedDate = iif(isNull(InsertedDate), \r",
				"currentTimestamp(), InsertedDate),",
				"          ModifiedDate = currentTimestamp()) ~> SetDates",
				"SetDates alterRow(upsertIf(true())) ~> AllowUpsert",
				"AllowUpsert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          InsertedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          HashKey as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['CustomerID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerID = SourceDB@CustomerID,",
				"          Title = SourceDB@Title,",
				"          FirstName = SourceDB@FirstName,",
				"          MiddleName = SourceDB@MiddleName,",
				"          LastName = SourceDB@LastName,",
				"          Suffix = SourceDB@Suffix,",
				"          CompanyName = SourceDB@CompanyName,",
				"          SalesPerson = SourceDB@SalesPerson,",
				"          EmailAddress = SourceDB@EmailAddress,",
				"          Phone = SourceDB@Phone,",
				"          InsertedDate,",
				"          ModifiedDate,",
				"          HashKey = CreateCustomHash@HashKey",
				"     )) ~> SinkDimCustomer"
			]
		}
	}
}